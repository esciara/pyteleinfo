# ============================================================================
# TOX CONFIGURATION: pyserial
# ============================================================================
# DESCRIPTION:
#
#   Use tox to run tasks (tests, ...) in a clean virtual environment.
#   Afterwards you can run tox in offline mode, like:
#
#       tox -e py36
#
#   Tox can be configured for offline usage.
#   Initialize local workspace once (download packages, create PyPI index):
#
#       tox -e init1
#       tox -e init2    (alternative)
#
#   NOTE:
#   You can either use "local1" or "local2" as local "tox.indexserver.default":
#
#     * $HOME/.pip/downloads/       (local1, default)
#     * downloads/                  (local2, alternative)
#
# SEE ALSO:
#   * http://tox.testrun.org/latest/config.html
# ============================================================================
# -- ONLINE USAGE:
# PIP_INDEX_URL = http://pypi.org/simple


[tox]
minversion = 2.3
isolated_build = true
envlist = py36, py37, py35
; envlist = py37, py36, py35, pypy, docs
skip_missing_interpreters = True
sitepackages = False
indexserver =
    default  = https://pypi.org/simple
    default2 = file://{homedir}/.pip/downloads/simple
    local1   = file://{toxinidir}/downloads/simple
    local2   = file://{homedir}/.pip/downloads/simple
    pypi     = https://pypi.org/simple

# -----------------------------------------------------------------------------
# TOX PREPARE/BOOTSTRAP: Initialize local workspace for tox off-line usage
# -----------------------------------------------------------------------------
; [testenv:init1]
; changedir = {toxinidir}
; skipsdist = True
; commands =
;     {toxinidir}/bin/toxcmd.py mkdir {toxinidir}/downloads
;     pip download --dest={toxinidir}/downloads -r py.requirements/all.txt
;     {toxinidir}/bin/make_localpi.py {toxinidir}/downloads
; deps =


; [testenv:init2]
; changedir = {toxinidir}
; skipsdist = True
; commands =
;     {toxinidir}/bin/toxcmd.py mkdir {homedir}/.pip/downloads
;     pip download --dest={homedir}/.pip/downloads -r py.requirements/all.txt
;     {toxinidir}/bin/make_localpi.py {homedir}/.pip/downloads
; deps =

# -----------------------------------------------------------------------------
# TEST ENVIRONMENTS:
# -----------------------------------------------------------------------------
[testenv]
whitelist_externals = poetry
; install_command = pip install -U {opts} {packages}
;changedir = {toxinidir}
deps = pytest
commands = pytest {posargs:tests}
; No behave tests for the time being
;    behave --format=progress {posargs:features}
;setenv =
;    PYTHONPATH = {toxinidir}


; [testenv:docs]
; basepython = python3
; changedir = docs
; commands =
;     sphinx-build -W -b html -D language=en -d {envtmpdir}/doctrees . {envtmpdir}/html/en
; deps =
;     -r{toxinidir}/py.requirements/docs.txt


; [testenv:cleanroom]
; basepython = python3
; changedir = {envdir}
; commands =
;     behave --version
;     {toxinidir}/bin/toxcmd.py copytree ../../tests .
;     {toxinidir}/bin/toxcmd.py copytree ../../features .
;     {toxinidir}/bin/toxcmd.py copy ../../behave.ini .
;     {toxinidir}/bin/toxcmd.py 2to3 -w -n --no-diffs tests
;     {toxinidir}/bin/toxcmd.py 2to3 -w -n --no-diffs features
;     behave --format=progress {posargs:features}
; deps =
;     {[testenv]deps}
; setenv =
;     PYTHONPATH = .:{envdir}

; [testenv:pylint]
; ignore_errors = True
; deps =
;     -r{toxinidir}/py.requirements/testing.txt
; commands =
;     pylint {posargs} teleinfo

; [testenv:lint]
; deps =
;     -r{toxinidir}/py.requirements/testing.txt
; commands =
;     flake8 {posargs}
;     pydocstyle {posargs:teleinfo tests}

; [testenv:typing]
; whitelist_externals=/bin/bash
; deps =
;     -r{toxinidir}/py.requirements/testing.txt
; commands =
;     /bin/bash -c 'TYPING_FILES=$(cat mypyrc); mypy $TYPING_FILES'
